package com.interviewtest.apidoc;

import com.interviewtest.config.WebSpringConfig;
import com.interviewtest.config.profiles.DocsProfile;
import org.junit.Before;
import org.junit.Test;
import org.junit.experimental.categories.Category;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

import java.io.StringReader;
import java.nio.file.Path;
import java.nio.file.Paths;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

/**
 * Created by drurenia on 8/16/2017.
 */
@WebAppConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
@ActiveProfiles({"development", "docs"})
@ContextConfiguration(classes = {WebSpringConfig.class, SwaggerConfig.class})
public class Swagger2MarkupGenerator {

    private static final String API_URI = "/v2/api-docs";

    /**
     * Path to the output .adoc file generated by Swagger2Markup.
     *
     * This path can be configured through Gradle if needed be.
     */
    private static final String OUTPUT_FILE_PATH = "build/docs/webapi";

    @Autowired
    private WebApplicationContext context;

    private MockMvc mockMvc;

    private Path outputFilePath;

    @Before
    public void setup() {
        this.mockMvc = MockMvcBuilders.webAppContextSetup(this.context).build();
        this.outputFilePath = Paths.get(OUTPUT_FILE_PATH);
    }

    @Category(DocsProfile.class)
    @Test
    public void convertSwaggerToAsciiDoc() throws Exception {
        final MvcResult mvcResult = mockMvc.perform(get(API_URI).accept(MediaType.APPLICATION_JSON_VALUE))
                .andExpect(status().isOk())
                .andReturn();
/*
        Swagger2MarkupConverter
                .from(new StringReader(mvcResult.getResponse().getContentAsString()))
                .build()
                .toFile(outputFilePath);*/
    }
}
